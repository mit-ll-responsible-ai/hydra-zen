name: Nightly

on:
  schedule:
    - cron: '0 2 * * *' # run at 2 AM UTC

jobs:
  test-against-pre-releases-of-dependencies:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: 3.8
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install tox tox-gh-actions
    - name: Test with tox
      run: tox -e pre-release
  run-pyright:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3

    - uses: actions/setup-node@v3.5.1
      with:
        node-version: ${{ env.NODE_VERSION }}

    - name: Get npm cache directory
      id: npm-cache
      run: |
        echo "::set-output name=dir::$(npm config get cache)"
    - uses: actions/cache@v2
      with:
        path: ${{ steps.npm-cache.outputs.dir }}
        key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
        restore-keys: |
          ${{ runner.os }}-node-
    - name: Install pyright
      run: sudo npm install -g pyright@">1.1.272"
    - uses: actions/checkout@v3
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: 3.8
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -e .
    - name: Run pyright basic on src
      run: pyright --lib tests/annotations/ src/
    - name: (pyright) verify type completeness
      run: pyright --ignoreexternal --verifytypes hydra_zen

  run-mypy:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Set up Python 3.8
      uses: actions/setup-python@v4
      with:
        python-version: 3.8
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install mypy
        pip install -e .
    - name: Run mypy on test script
      run: mypy --warn-unused-ignores tests/annotations/mypy_checks.py
